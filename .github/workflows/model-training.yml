name: MLflow CI/CD Model Training - Simple

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'MLProject/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      experiment_name:
        description: 'MLflow experiment name'
        required: false
        default: 'iris_classification_ci_alpian_khairi'
      n_estimators:
        description: 'Number of estimators'
        required: false
        default: '100'
      max_depth:
        description: 'Maximum depth'
        required: false
        default: '10'

jobs:
  model-training:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        activate-environment: iris-classification-env
        environment-file: MLProject/conda.yaml
        python-version: 3.9
        auto-activate-base: false
        
    - name: Install MLflow
      shell: bash -l {0}
      run: |
        conda activate iris-classification-env
        pip install mlflow
        mlflow --version
        
    - name: Verify MLProject structure
      run: |
        echo "Checking MLProject structure..."
        ls -la MLProject/
        if [ -f "MLProject/MLProject" ]; then
          echo "MLProject file found:"
          cat MLProject/MLProject
        else
          echo "ERROR: MLProject file not found!"
          exit 1
        fi
        
        if [ -f "MLProject/conda.yaml" ]; then
          echo "Conda environment file found:"
          cat MLProject/conda.yaml
        else
          echo "ERROR: conda.yaml not found!"
          exit 1
        fi
        
    - name: Set up environment variables
      run: |
        echo "DAGSHUB_TOKEN=${{ secrets.DAGSHUB_TOKEN }}" >> $GITHUB_ENV
        echo "MLFLOW_TRACKING_USERNAME=alvian2022" >> $GITHUB_ENV
        echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.DAGSHUB_TOKEN }}" >> $GITHUB_ENV
        
    - name: Test Python environment
      shell: bash -l {0}
      run: |
        conda activate iris-classification-env
        python --version
        pip list | grep -E "(mlflow|pandas|scikit-learn)"
        
    - name: Run MLflow Project Training
      shell: bash -l {0}
      run: |
        conda activate iris-classification-env
        cd MLProject
        echo "Running MLflow project..."
        
        # Check if modelling.py exists
        if [ ! -f "modelling.py" ]; then
          echo "ERROR: modelling.py not found!"
          ls -la
          exit 1
        fi
        
        # Run MLflow project
        mlflow run . \
          --experiment-name "${{ github.event.inputs.experiment_name || 'iris_classification_ci_alpian_khairi' }}" \
          -P n_estimators=${{ github.event.inputs.n_estimators || 100 }} \
          -P max_depth=${{ github.event.inputs.max_depth || 10 }} \
          --env-manager conda
          
    - name: Verify artifacts creation
      run: |
        cd MLProject
        echo "=== CHECKING GENERATED ARTIFACTS ==="
        ls -la
        
        echo "=== CHECKING FOR SPECIFIC FILES ==="
        for file in "trained_model_ci.pkl" "confusion_matrix_ci.png" "feature_importance_ci.png" "classification_report_ci.txt"; do
          if [ -f "$file" ]; then
            echo "✅ Found: $file"
          else
            echo "❌ Missing: $file"
          fi
        done
        
    - name: Upload training artifacts
      uses: actions/upload-artifact@v3
      with:
        name: model-artifacts-${{ github.run_number }}
        path: |
          MLProject/trained_model_ci.pkl
          MLProject/confusion_matrix_ci.png
          MLProject/feature_importance_ci.png
          MLProject/classification_report_ci.txt
        retention-days: 30
        if-no-files-found: warn
        
    - name: Create model summary
      run: |
        cd MLProject
        echo "# Model Training Summary" > model_summary.md
        echo "**Author:** alpian_khairi_C1BO" >> model_summary.md
        echo "**Date:** $(date)" >> model_summary.md
        echo "**Git Commit:** ${{ github.sha }}" >> model_summary.md
        echo "**Workflow Run:** ${{ github.run_number }}" >> model_summary.md
        echo "" >> model_summary.md
        echo "## Parameters" >> model_summary.md
        echo "- N Estimators: ${{ github.event.inputs.n_estimators || 100 }}" >> model_summary.md
        echo "- Max Depth: ${{ github.event.inputs.max_depth || 10 }}" >> model_summary.md
        echo "- Experiment: ${{ github.event.inputs.experiment_name || 'iris_classification_ci_alpian_khairi' }}" >> model_summary.md
        echo "" >> model_summary.md
        echo "## Generated Files" >> model_summary.md
        echo "$(ls -la *.pkl *.png *.txt 2>/dev/null || echo 'No artifacts found')" >> model_summary.md
        
    - name: Upload model summary
      uses: actions/upload-artifact@v3
      with:
        name: model-summary-${{ github.run_number }}
        path: MLProject/model_summary.md
        retention-days: 30