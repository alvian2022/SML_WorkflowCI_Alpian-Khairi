name: MLflow CI/CD Model Training

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'MLProject/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      experiment_name:
        description: 'MLflow experiment name'
        required: false
        default: 'iris_classification_ci_alpian_khairi'
      n_estimators:
        description: 'Number of estimators'
        required: false
        default: '100'
      max_depth:
        description: 'Maximum depth'
        required: false
        default: '10'

jobs:
  model-training:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        activate-environment: iris-classification-env
        environment-file: MLProject/conda.yaml
        python-version: 3.9
        auto-activate-base: false
        
    - name: Install MLflow
      shell: bash -l {0}
      run: |
        conda activate iris-classification-env
        pip install mlflow
        mlflow --version
        
    - name: Verify MLProject structure
      run: |
        echo "Checking MLProject structure..."
        ls -la MLProject/
        echo "MLProject file:"
        cat MLProject/MLProject || echo "MLProject file not found"
        echo "Conda environment:"
        cat MLProject/conda.yaml || echo "conda.yaml not found"
        
    - name: Set up environment variables
      run: |
        echo "DAGSHUB_TOKEN=${{ secrets.DAGSHUB_TOKEN }}" >> $GITHUB_ENV
        echo "MLFLOW_TRACKING_USERNAME=alvian2022" >> $GITHUB_ENV
        echo "MLFLOW_TRACKING_PASSWORD=${{ secrets.DAGSHUB_TOKEN }}" >> $GITHUB_ENV
        
    - name: Run MLflow Project Training
      shell: bash -l {0}
      run: |
        conda activate iris-classification-env
        cd MLProject
        echo "Running MLflow project..."
        mlflow run . \
          --experiment-name "${{ github.event.inputs.experiment_name || 'iris_classification_ci_alpian_khairi' }}" \
          -P n_estimators=${{ github.event.inputs.n_estimators || 100 }} \
          -P max_depth=${{ github.event.inputs.max_depth || 10 }} \
          --env-manager conda
          
    - name: Verify artifacts
      run: |
        cd MLProject
        echo "Generated artifacts:"
        ls -la *.pkl *.png *.txt *.md 2>/dev/null || echo "No artifacts found"
        
    - name: Upload training artifacts
      uses: actions/upload-artifact@v4
      with:
        name: model-artifacts-${{ github.run_number }}
        path: |
          MLProject/trained_model_ci.pkl
          MLProject/confusion_matrix_ci.png
          MLProject/feature_importance_ci.png
          MLProject/classification_report_ci.txt
        retention-days: 30
        if-no-files-found: warn
        
    - name: Create simple summary
      run: |
        cd MLProject
        echo "Training completed at $(date)" > summary.txt
        echo "Workflow: ${{ github.run_number }}" >> summary.txt
        echo "Commit: ${{ github.sha }}" >> summary.txt
        echo "Parameters: n_estimators=${{ github.event.inputs.n_estimators || 100 }}, max_depth=${{ github.event.inputs.max_depth || 10 }}" >> summary.txt
        
    - name: Upload summary
      uses: actions/upload-artifact@v4
      with:
        name: training-summary-${{ github.run_number }}
        path: MLProject/summary.txt
        retention-days: 30
        if-no-files-found: warn